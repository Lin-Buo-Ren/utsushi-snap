%YAML 1.2
---
# Snapcraft Recipe for Utsushi
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * Snapcraft.yaml reference
#   https://forum.snapcraft.io/t/snapcraft-yaml-reference/4276
# * The snapcraft syntax
#   https://docs.snapcraft.io/build-snaps/syntax
# * Snap Docs
#   https://snapdocs.labix.org
# * Latest doc topics in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

name: utsushi
summary: Next Generation Image Acquisition
description: |
  This is original un-rebranded Epson's "Image Scan! for Linux" application that can be used with compatible Epson scanners.

  **NOTE:** Currently due to missing device-specific files, most Epson scanners are likely not going to work with only this snap.

version: determined-by-version-script
version-script: ./snap/utilities/set-snap-version.bash

# Reason for classic confinement:
# * Snap requires access to device-specific firmware and library which is not re-distributable
# * Requires access to scanner hardware, which is not provided by any interfaces(TODO: Does `raw-usb` work?)
confinement: devmode
grade: devel
icon: snap/gui/icon.svg

apps:
  utsushi:
    command: bin/utsushi-launch
    desktop: share/applications/utsushi.desktop

    # Refer the following documentation for asserting interface plugs and slots in a security confined snap:
    # Interfaces - doc - snapcraft.io
    # https://forum.snapcraft.io/t/interfaces/6154
    # Non-A/C: Non-autoconnect interface
    plugs:
    # For snaps with a graphical user interface:
    - desktop
    - desktop-legacy
    - x11
    - unity7
    - wayland

    # Storage access
    - home
    - removable-media # Non-A/C

    # Scanner access (still not supported by snapd)
    #- scanner
    - raw-usb # USB device write access; Non-A/C

    #slots:

parts:
  # Assets from the snap packaging, refer each READMEs under the `snap` folder for more information
  assets:
    plugin: nil

    override-pull: |
      set \
        -o errexit \
        -o nounset

      # Clear all files in source tree
      rm \
        --force \
        --recursive \
        --verbose \
        * \
        .* \
        || true # Allow no files found

      cp \
        --recursive \
        --verbose \
        ../../../snap/* \
        .

    override-build: |
      set \
        -o errexit \
        -o nounset

      ./utilities/install-assets.bash
    prime:
    - -utilities
    - -patches

  # Optional auxiliary part for displaying simple dialogs for better user experience, using Yet Another Dialog
  yad:
    after:
    - desktop-gtk3

    plugin: nil
    stage-packages:
    - yad

  utsushi:
    after:
    - assets
    - desktop-gtk3

    source: https://gitlab.com/utsushi/utsushi.git
    source-depth: 1

    plugin: autotools
    configflags:
    - --prefix=/snap/utsushi/current
    - --with-boost-libdir=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
    - CXXFLAGS=-std=c++11

    override-build: |
      set \
        -o errexit \
        -o nounset

      sudo ./install-deps
      ./bootstrap \
        --force

      snapcraftctl build

      # Patch broken executable symbolic link
      ln \
        --force \
        --no-dereference \
        --symbolic \
        --verbose \
        ../libexec/utsushi/utsushi-main \
        "${SNAPCRAFT_PART_INSTALL}"/snap/utsushi/current/bin/utsushi

      # Hardware-specific hack for Perfection V39
      ln \
        --force \
        --symbolic \
        --verbose \
        esci-interpreter \
        "${SNAPCRAFT_PART_INSTALL}"/snap/utsushi/current/libexec/utsushi/esci-gt-s650

    organize:
      snap/utsushi/current: /

    stage-packages:
    - libatkmm-1.6-1v5
    - libboost-filesystem1.58.0
    - libboost-program-options1.58.0
    - libboost-system1.58.0
    - libcairomm-1.0-1v5
    - libglibmm-2.4-1v5
    - libgomp1
    - libgraphicsmagick++-q16-12
    - libgraphicsmagick-q16-3
    - libgtkmm-2.4-1v5
    - libjasper1
    - libltdl7
    - libpangomm-1.4-1v5
    - libsigc++-2.0-0v5
    - libusb-1.0-0
    - libwebp5
    - libwmf0.2-7

    filesets:
      etc:
      - etc
      executables:
      - bin
      - libexec
      library-headers:
      - include
      libraries:
      - lib
      localization:
      - share/locale
      resources:
      - share/utsushi
      sane:
      - usr/lib/*/sane
      usr-from-staged-packages:
      - usr

    stage:
    - $etc
    - $executables
    - $libraries
    - $localization
    - $resources
    - $sane
    - $usr-from-staged-packages

    override-stage: |
      set \
        -o errexit \
        -o nounset

      snapcraftctl stage

      utilities/patch-desktop-entries.bash

    prime:
    - $etc
    - $executables
    - $libraries
    - $localization
    - $resources
    - $sane
    - $usr-from-staged-packages
